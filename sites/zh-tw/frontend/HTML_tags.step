goals do
  goal "在你的 HTML 檔案加上一些標籤"
  goal "學會更多可用的標籤"
end

overview do

  message <<-MARKDOWN

## 用標籤來分隔 Blocks of Content


每個標籤都帶有它各自的意義。為了將你的內容適當地表現出來，每個東西都應該放到標籤內，而不是只有你想要強調的部份。我們來用用看段落標籤 `<p>` 及頭標籤1號 `<h1>` 吧。

你會注意到就算你放了額外的換行符號及空白，瀏覽器還是會將它們視為單一個空白。當你開始熟悉 HTML 時，這可能會感到痛苦，因為你必須輸入
  MARKDOWN

  source_code :html, <<HTML
<p>第一句</p>
<p>第二句</p>
HTML
  message <<-MARKDOWN

才能在兩句話之間加上一個空白。但隨著你經驗的累積，你會覺得 HTML 這項特性其實是很有用的，因為這表示你可以把程式碼改成 **你** 最好讀格式，且不必擔心瀏覽器把你的換行符號及空白解讀成其它意思。

## 巢狀標籤

HTML 標籤出現在另一個標籤內是很常見的事。在上面的例子中，你看到：
  MARKDOWN

  source_code :html, "<h1><em></em></h1>"

  important do
    message "記得確認標籤都有正確的 _擺放_ 。例如你不能："

    source_code :html, "<h1><em>Hello World!</h1> I like you!</em>"

    message "內部標籤 `em` 必須比外部標籤提早關閉。"
  end
end

steps do

  step do
    message "Add some more lines of content to your HTML file. Introduce yourself."

    source_code :html, <<-HTML
Hello <em>World</em>!

My name is Rachel.
    HTML

    message "Now save the file and refresh your browser."
    img src: 'img/hello_world_2line.png'
  end

  step do
    message "The browser ignored the new lines and the blank line because we didn't use any tags. Let's use some to break up our content."
    message "Update your HTML with an `h1` tag and a `p` tag:"

    source_code :html, <<-HTML
<h1>Hello <em>World</em>!</h1>
<p>My name is Rachel.</p>
    HTML

    message "Now save the file and refresh your browser."
    img src: 'img/hello_world_2line2.png'
  end

  step do
    message "Now let's add a list of things we like."

    source_code :html, <<-HTML
<h1>Hello <em>World</em>!</h1>
<p>My name is Rachel.</p>
<p>I like:</p>
<ul>
  <li>Polka Dots</li>
  <li>Soccer</li>
  <li>Programming</li>
</ul>
    HTML

    message "Now save the file and refresh your browser."
    img src: 'img/html_tags_list.png'
  end

end


explanation do

  message <<-MARKDOWN

## Tags for Every Occasion

The meteoric rise in popularity of the world-wide-web and the recent proliferation of web
applications has made HTML hugely popular.  While originally used only for simple documents,
HTML now has tags for embedded video and music playback, embedding images, filling out
web forms, and all kinds of other useful tags.

You just used two well-known tags, `h1` for a headline and `p` for a paragraph. But there
are a ton of other tags you might use:

## More Tags

  MARKDOWN

  table border: "1", cellspacing: "0", cellpadding: "3", align: "center" do
    tr {
      th "Tag"
      th "Purpose"
    }
    tr {
      td "a"
      td "A link (the 'a' stands for Anchor)."
    }
    tr {
      td "h1 to h6"
      td "Various headers, h1 is the most important, h6 the least."
    }
    tr {
      td "ul"
      td "Start a bulleted list (an 'unordered list')."
    }
    tr {
      td "ol"
      td "Start a numbered list (an 'ordered list')."
    }
    tr {
      td "li"
      td "A single thing within a list (a 'list item')."
    }
    tr {
      td "table, tr, td"
      td "Tables (like this one) with table rows and data cells."
    }
    tr {
      td "form"
      td "A form that can collect data from user input."
    }
    tr {
      td "input"
      td "A text input, a button, or a checkbox in a form."
    }
    tr {
      td "div"
      td "A section marker that doesn't do anything specific to the contents itself, but does make a new line after. (a 'division'. More on this later)"
    }
    tr {
      td "span"
      td "Another section marker that doesn't do anything to its contents, but is inline - it does not make a new line after."
    }
  end

  message <<-MARKDOWN

  HTML5 introduced lots of new tags to make the HTML more *semantic*, meaning the tags should describe the content they describe. Some of the new elements introduced by HTML5 include:

  MARKDOWN

  table border: "1", cellspacing: "0", cellpadding: "3", align: "center" do
    tr {
      th "Tag"
      th "Purpose"
    }
    tr {
      td "section"
      td "A section of a document: a thematic grouping of content."
    }
    tr {
      td "nav"
      td "A navigation section, containing links to other pages or to parts within the current page."
    }
    tr {
      td "header"
      td "The header for a page or section of a page. (This is different from the head element, which contains metadata about the page!)."
    }
    tr {
      td "footer"
      td "The footer for a page or section of a page."
    }
    tr {
      td "main"
      td "The main content of a page."
    }
    tr{
      td "aside"
      td "Content that's related to the main content, but could be considered separate from it."
    }
  end

  message <<-MARKDOWN

You don't need to memorize all the tags! You can always look them up on sites like:

* [WebPlatform.org](http://webplatform.org/)
* [Mozilla Developer Network](https://developer.mozilla.org/en/HTML/Element)
* [Sitepoint](http://reference.sitepoint.com/html)

## Try This

What happens if you change the `<ul>` in your **hello.html** to `<ol>`? (Don't forget to change the closing tag, too.)

Can you link your favorite things to their Wikipedia pages? Here's an example link for you: `<a href="http://en.wikipedia.org/wiki/Ruby_(programming_language)">Ruby</a>`

What are all the individual parts of the code to add a link?

  MARKDOWN

end

next_step "HTML_structure"
